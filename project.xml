<project
    name = "fty-security-wallet"
    description = "Security Wallet to manage document including a public and secret part"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-security-wallet"
    >

    <!-- Note: Eaton proprietary components do not make Travis recipes, but we
         mention the expected set-up for it to be consistent just in case -->
    <target name = "debian" />
    <target name = "redhat" />

    <target name = "travis" >
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>

    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "czmq"
        repository = "https://github.com/42ity/czmq.git"
        release = "v3.0.2-FTY-master"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository = "https://github.com/42ity/libzmq.git"
            release = "4.2.0-FTY-master" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "1.0.5-FTY-master"
                test = "sodium_init"
                />
        </use>
    </use>

    <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository = "https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master"
        />

    <use project = "fty-common-mlm" libname = "libfty_common_mlm" header = "fty_common_mlm.h"
        repository = "https://github.com/42ity/fty-common-mlm.git"
        release = "master"
        test = "fty_common_mlm_selftest" >

        <use project = "czmq"
            repository = "https://github.com/42ity/czmq.git"
            release = "v3.0.2-FTY-master"
            min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
                repository = "https://github.com/42ity/libzmq.git"
                release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                    repository = "https://github.com/42ity/libsodium.git"
                    release = "1.0.5-FTY-master"
                    test = "sodium_init"
                    />
            </use>
        </use>

        <use project = "cxxtools" test = "cxxtools::Utf8Codec::Utf8Codec" header = "cxxtools/allocator.h"
            repository = "https://github.com/42ity/cxxtools.git"
            release = "2.2-FTY-master"
            />

        <use project = "malamute" min_major = "1" test = "mlm_server_test"
            repository = "https://github.com/42ity/malamute.git"
            release = "1.0-FTY-master"
            />

        <use project = "openssl" header = "openssl/sha.h" debian_name = "libssl-dev"/>

        <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
            repository = "https://github.com/42ity/fty-common.git"
            release = "master"
            test = "fty_common_selftest" >

            <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
                repository = "https://github.com/42ity/fty-common-logging.git"
                release = "master"
                test = "fty_common_logging_selftest" >

                <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                    repository = "https://github.com/42ity/log4cplus.git"
                    release = "1.1.2-FTY-master"
                    />
           </use>
        </use>

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master"
                />
        </use>
    </use>
    <use project = "cxxtools"
        test = "cxxtools::Utf8Codec::Utf8Codec"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "2.2-FTY-master"
    />

    <class name = "secw_security_wallet" private = "1" selftest = "0">Security wallet to manage the storage and access</class>
    <class name = "secw_portfolio" private = "1" selftest = "0">Portfolio to handle documents in the agent</class>
    <class name = "secw_access" private = "1" selftest = "0">Handle the access rights on tag for client in the agent</class>
    
    <class name = "secw_document" selftest = "0">Document parsers</class>
    <class name = "secw_exception" selftest = "0">secw exception</class>
    <class name = "secw_tag_description" selftest = "0">Description of a tag</class>
    <class name = "secw_client_accessor" selftest = "0">Accessor to return documents from the agent</class>
    
    <!-- Note: Add new supported types here and modify Document to handle then in the factory -->
    <class name = "secw_snmpv3" selftest = "0">Document parsers for snmpv3 document</class>
    
    <class name = "fty-security-wallet-server">Security Wallet Server</class>
    <main  name = "fty-security-wallet" service = "1">Security Wallet Binary</main>

</project>