<project
    name = "fty-security-wallet"
    description = "Security Wallet to manage JSON documents including a public and secret part"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-security-wallet"
    >

    <target name = "debian" />
    <target name = "redhat" />

    <target name = "travis" >
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <option name = "dist" value = "trusty" />
        <option name = "shadow_gcc" value = "2" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>

    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>
    
    <classfilename use-cxx-gcc-4-9 = "true"/>

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "czmq"
        repository = "https://github.com/42ity/czmq.git"
        release = "v3.0.2-FTY-master"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository = "https://github.com/42ity/libzmq.git"
            release = "4.2.0-FTY-master" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "1.0.5-FTY-master"
                test = "sodium_init"
                />
        </use>
    </use>

    <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository = "https://github.com/42ity/malamute.git"
        release = "1.0-FTY-master"
        />

    <use project = "cxxtools"
        test = "cxxtools::Utf8Codec::Utf8Codec"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "2.2-FTY-master"
        />

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        release = "master"
        test = "fty_common_logging_selftest" >

        <!-- Note: pure C projects should use clogger.h, C++ use logger.h -->
        <use project = "log4cplus"
            header = "log4cplus/logger.h"
            test = "appender_test"
            repository = "https://github.com/42ity/log4cplus.git"
            release = "1.1.2-FTY-master"
            />
    </use>

    <use project = "fty-common-mlm" libname = "libfty_common_mlm" header = "fty_common_mlm.h"
        repository = "https://github.com/42ity/fty-common-mlm.git"
        release = "master"
        test = "fty_common_mlm_selftest" >

        <use project = "czmq"
            repository = "https://github.com/42ity/czmq.git"
            release = "v3.0.2-FTY-master"
            min_major = "3" min_minor = "0" min_patch = "2" >

            <use project = "libzmq"
                repository = "https://github.com/42ity/libzmq.git"
                release = "4.2.0-FTY-master" >

                <use project = "libsodium" prefix = "sodium"
                    repository = "https://github.com/42ity/libsodium.git"
                    release = "1.0.5-FTY-master"
                    test = "sodium_init"
                    />
            </use>
        </use>

        <use project = "cxxtools" test = "cxxtools::Utf8Codec::Utf8Codec" header = "cxxtools/allocator.h"
            repository = "https://github.com/42ity/cxxtools.git"
            release = "2.2-FTY-master"
            />

        <use project = "malamute" min_major = "1" test = "mlm_server_test"
            repository = "https://github.com/42ity/malamute.git"
            release = "1.0-FTY-master"
            />

        <use project = "openssl" header = "openssl/sha.h" debian_name = "libssl-dev"/>

        <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
            repository = "https://github.com/42ity/fty-common.git"
            release = "master"
            test = "fty_common_selftest" >

            <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
                repository = "https://github.com/42ity/fty-common-logging.git"
                release = "master"
                test = "fty_common_logging_selftest" >

                <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                    repository = "https://github.com/42ity/log4cplus.git"
                    release = "1.1.2-FTY-master"
                    />
           </use>
        </use>

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master"
                />
        </use>
    </use>
    
    <use project = "fty-common-socket" libname = "libfty_common_socket" header = "fty_common_socket.h"
        repository = "https://github.com/42ity/fty-common-socket.git"
        release = "master"
        test = "fty_common_socket_selftest" >

        <use project = "cxxtools" test = "cxxtools::Utf8Codec::Utf8Codec" header = "cxxtools/allocator.h"
            repository = "https://github.com/42ity/cxxtools.git"
            release = "2.2-FTY-master"
            />

        <use project = "openssl" header = "openssl/sha.h" debian_name = "libssl-dev"/>

        <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
            repository = "https://github.com/42ity/fty-common.git"
            release = "master"
            test = "fty_common_selftest" >

            <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
                repository = "https://github.com/42ity/fty-common-logging.git"
                release = "master"
                test = "fty_common_logging_selftest" >

                <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                    repository = "https://github.com/42ity/log4cplus.git"
                    release = "1.1.2-FTY-master"
                    />
           </use>
        </use>

        <use project = "fty-common-logging" libname = "libfty_common_logging" header = "fty_log.h"
            repository = "https://github.com/42ity/fty-common-logging.git"
            release = "master"
            test = "fty_common_logging_selftest" >

            <use project = "log4cplus" header = "log4cplus/logger.h" test = "appender_test"
                repository = "https://github.com/42ity/log4cplus.git"
                release = "1.1.2-FTY-master"
                />
        </use>
    </use>
    
    <!-- Note: Credential asset mapping -->
    <class name = "cam_credential_asset_mapping_server" private = "1" selftest = "0">Credential Asset Mapping Server</class>
    
    <class name = "cam_credential_asset_mapping_storage" private = "1" selftest = "0">Credential asset mapping class to manage the storage</class>
    
    <class name = "cam_credential_asset_mapping" selftest = "0">Credential asset mapping class</class>
    <class name = "cam_accessor" selftest = "0">Accessor to Credential asset mapping</class>
    <class name = "cam_exception" selftest = "0">Credential asset mapping exceptions</class>

    <class name = "cam_helpers" private = "1" selftest = "0">List of helper functions use a bit everywhere</class>

    <!-- Note: Secw class -->
    <class name = "secw_security_wallet_server" private = "1" selftest = "0" >Security Wallet Server</class>
    
    <class name = "secw_security_wallet" private = "1" selftest = "0">Security wallet to manage the storage and access</class>
    <class name = "secw_portfolio" private = "1" selftest = "0">Portfolio to handle documents in the agent</class>

    <class name = "secw_client_accessor" private = "1" selftest = "0">Accessor to return documents from the agent</class>
    <class name = "secw_helpers" private = "1" selftest = "0">List of helper functions use a bit everywhere</class>

    <class name = "secw-configuration" private = "1" selftest = "0">Handle the configuration of a security wallet</class>
    
    <class name = "secw_document" selftest = "0">Document parsers</class>
    <class name = "secw_exception" selftest = "0">Exceptions</class>
    
    <class name = "secw_producer_accessor" selftest = "0">Accessor to return documents from the agent</class>
    <class name = "secw_consumer_accessor" selftest = "0">Accessor to return documents from the agent</class>
    
    <!-- Note: Add new supported types here and modify secw_document.cc to handle then in the Document factory -->
    <class name = "secw_external_certificate" selftest = "0">Document parsers for xternal certificate document</class>
    <class name = "secw_snmpv3" selftest = "0">Document parsers for snmpv3 document</class>
    <class name = "secw_snmpv1" selftest = "0">Document parsers for snmpv1 document</class>
    <class name = "secw_user_and_password" selftest = "0">Document parsers for user and password document</class>
    
    <!-- Note: mlm agents -->
    <class name = "fty-credential-asset-mapping-mlm-agent">Credential Asset Mapping malamute agent</class>
    <!--<class name = "fty-security-wallet-mlm-agent">Security Wallet malamute agent</class>-->
    <class name = "fty-security-wallet-socket-agent">Security Wallet malamute agent</class>
    <main  name = "fty-security-wallet" service = "1">Security Wallet Binary</main>

</project>
